{"ast":null,"code":"import _slicedToArray from \"/home/taras/dev/lp-button/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\n/**\n * Hook into an external source given a path\n * Returns whether the source is loaded or not\n * @param source\n */\n\nvar useExternalSource = function useExternalSource(source) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasLoaded = _useState2[0],\n      setHasLoaded = _useState2[1];\n\n  useEffect(function () {\n    if (window.externalSourcesLoaded[source].state === 'completed') {\n      setHasLoaded(true);\n      return;\n    }\n\n    window.externalSourcesLoaded[source].callback = function () {\n      setHasLoaded(true);\n    };\n  }, []);\n  return hasLoaded;\n};\n\nexport default useExternalSource;","map":{"version":3,"sources":["/home/taras/dev/lp-button/node_modules/direflow-component/dist/hooks/useExternalSource.js"],"names":["useState","useEffect","useExternalSource","source","hasLoaded","setHasLoaded","window","externalSourcesLoaded","state","callback"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAAY;AAClC,kBAAkCH,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOI,SAAP;AAAA,MAAkBC,YAAlB;;AACAJ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIK,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,EAAqCK,KAArC,KAA+C,WAAnD,EAAgE;AAC5DH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACH;;AACDC,IAAAA,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,EAAqCM,QAArC,GAAgD,YAAM;AAClDJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,KAFD;AAGH,GARQ,EAQN,EARM,CAAT;AASA,SAAOD,SAAP;AACH,CAZD;;AAaA,eAAeF,iBAAf","sourcesContent":["import { useState, useEffect } from 'react';\n/**\n * Hook into an external source given a path\n * Returns whether the source is loaded or not\n * @param source\n */\nconst useExternalSource = (source) => {\n    const [hasLoaded, setHasLoaded] = useState(false);\n    useEffect(() => {\n        if (window.externalSourcesLoaded[source].state === 'completed') {\n            setHasLoaded(true);\n            return;\n        }\n        window.externalSourcesLoaded[source].callback = () => {\n            setHasLoaded(true);\n        };\n    }, []);\n    return hasLoaded;\n};\nexport default useExternalSource;\n"]},"metadata":{},"sourceType":"module"}